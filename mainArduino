#include <SoftwareSerial.h>
SoftwareSerial BT(10, 11); // Bluetooth RX, TX 핀 연결

const int vibrationPin = 6; // 진동 센서 핀
const int wifiStatusPin = 7; // WiFi 값 전달 핀
unsigned long stateStartTime = 0; // 상태 시작 
const unsigned long TIMEOUT_DURATION = 5000; // 상태 초기화 시간

// 상태 플래그 변수 초기값
bool noUmbrella = false; // 우산 감지 플래그
bool personDetected = false; // 사람 감지 플래그
bool rainDetectedWiFi = false; // WiFi 비 감지 플래그
bool rainDetectedBT = false; // Bluetooth 비 감지 플래그

enum State { 
  IDLE,         // 대기 상태
  PERSON_FIRST, // 사람이 먼저 감지된 상태
  DOOR_FIRST,   // 문이 먼저 감지된 상태
  CHECK_UMBRELLA // 우산 확인 상태
};

State currentState = IDLE; //초기 상태 설정

void setup() {
  Serial.begin(9600);
  BT.begin(9600); // 블루투스 모듈 시작
  pinMode(13, OUTPUT); //buzzer
  pinMode(wifiStatusPin, INPUT); //WiFi

  // 핀 번호 정의
  //우산 센서
  pinMode(2,OUTPUT);
  pinMode(3,INPUT);
  //사람 센서
  pinMode(4,OUTPUT);
  pinMode(5,INPUT);  
}

void loop() {
  // 1. WiFi에서 비 감지 신호 수신
  int pinState = digitalRead(wifiStatusPin); 
  // 상태에 따라 rainDetected 업데이트
  if (pinState == HIGH) {
    rainDetectedWiFi = true;  // 비 감지됨
    //Serial.println("Rain detected!");
  } else {
    rainDetectedWiFi = false;  // 비 감지되지 않음
    //Serial.println("No rain detected.");
  }

  // 2. 블루투스에서 비 감지 신호 수신
  if (BT.available()) {
      delay(10);
      String receivedData = BT.readStringUntil('\n'); // 마스터에서 데이터 수신
      receivedData.trim(); // 공백 제거
      if (receivedData == "Rain=1") {
        rainDetectedBT = false; // 비 없음
        // Serial.println("No rain detected");
      } 
      else if (receivedData == "Rain=0") {
        rainDetectedBT = true;  // 비 감지
        // Serial.println("Rain detected");
      } 
      else {
        //Serial.println("Invalid data received: " + receivedData);
      }
  }

  // 3. 감지 센서들 작동
  // 3-1. 우산 센서 상태 읽기
  digitalWrite(2,HIGH);
  delayMicroseconds(10);
  digitalWrite(2,LOW);
  long duration1 = pulseIn(3, HIGH);
  if (duration1 ==0){
    return;
  }
  long umbrellaSensor = duration1/58.824; //우산 거리 cm 변환
  //Serial.println(umbrellaSensor);
  noUmbrella = umbrellaSensor > 15; // 우산 감지 오프셋
  //Serial.println(noUmbrella);
  
  // 3-2. 사람 센서 상태 읽기
  digitalWrite(4,HIGH);
  delayMicroseconds(10);
  digitalWrite(4,LOW);
  long duration2 = pulseIn(5, HIGH);
  if (duration2 ==0){
    return;
  }
  long personSensor = duration2/58.824; //사람 거리 cm 변환
  personDetected = personSensor < 70; //사람 감지 오프셋
  //Serial.println(personSensor);

  // 3-3. 문(진동 센서) 상태 읽기
  int sensorState = digitalRead(vibrationPin); // HIGH일 때 문 열림

  // 4. 상태 머신
  switch (currentState) {
    case IDLE:
      stateStartTime = millis(); //IDLE 상태로 돌아올 때 초기화
      if (personDetected) {
        currentState = PERSON_FIRST;  // 사람이 먼저 감지됨
        Serial.println("State: PERSON_FIRST");
        stateStartTime = millis();
      } else if (sensorState == HIGH) {
        currentState = DOOR_FIRST;  // 문이 먼저 감지됨
        Serial.println("State: DOOR_FIRST");
        stateStartTime = millis();
      }
      break;

    case PERSON_FIRST:
      if (sensorState == HIGH) {
        currentState = CHECK_UMBRELLA;  // 문이 감지되었으므로 우산 확인
        Serial.println("State: CHECK_UMBRELLA");
      } else if (millis() - stateStartTime >= TIMEOUT_DURATION) {
        resetState(); // 일정 시간이 지나면 상태 초기화
        Serial.println("State: IDLE (Timeout)");
      }
      break;

    case DOOR_FIRST:
      if (personDetected) {
        currentState = IDLE;  // 사람이 감지되었으나, 문이 먼저 감지되었으므로 초기화
        Serial.println("State: IDLE (No action needed)");
      } else if (millis() - stateStartTime >= TIMEOUT_DURATION) {
        resetState(); // 일정 시간이 지나면 상태 초기화
        Serial.println("State: IDLE (Timeout)");
      }
      break;

    case CHECK_UMBRELLA:
      if (rainDetectedWiFi) { //WiFi에서 비 감지
        Serial.println("Action: WiFi indicates rain. Checking umbrella...");
        if (!noUmbrella) { // 우산을 챙기지 않았으므로 알림
          Serial.println("Action: Alert! Take an umbrella.");
          buzz();
        } else {
          Serial.println("Action: No action needed (Umbrella taken).");
        }
      } 
      else if(rainDetectedBT){ //Bluetooth에서 비 감지
        Serial.println("Action: Bluetooth indicates rain. Checking umbrella...");
        if (!noUmbrella) { // 우산을 챙기지 않았으므로 알림
          Serial.println("Action: Alert! Take an umbrella.");
          buzz();
        }
        else {
          Serial.println("no umbrella");
        }
      }
      else { //비가 감지되지 않음
        Serial.println("Action: No rain detected. No action needed.");
      }
      resetState();  // 상태 초기화
      break;
  }

  delay(100); // 루프 딜레이
}

// 부저 울리는 함수
void buzz() {
  tone(13, 1000, 1000);
}

// 상태 초기화 함수
void resetState() {
  currentState = IDLE;
  Serial.println("State reset to IDLE.");
}
